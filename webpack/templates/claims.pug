extends _layout

block pageInit
  -
    entryPoint = 'claims';
    basePath = '..';
    pages = $pages;
    const { standard_claims: claims, claims_categories: categories } = $standardFields;
    const claimsByCategory = Object.entries(claims)
      .reduce(
        (acc, [originalName, claim]) => {
          if (claim.category in acc) {
            acc[claim.category][originalName] = claim;
          } else {
            acc[claim.category] = { [originalName]: claim };
          }
          return acc;
        },
        {}
      );
    Object.keys(categories).forEach((categoryId) => {
      if (!(categoryId in claimsByCategory)) {
        delete categories[categoryId];
      }
    });

block main
  p.lead.mb-4.
    Claims used in JSON web tokens are standardized in various normative documents.
    The dictionary below lists some of these registered claims; see <a href="https://www.iana.org/assignments/jwt/jwt.xhtml">IANA</a>
    for a complete list.

  each category, categoryId in categories
    h3(id=`category-${categoryId}`)= category.title
    p.
      !{category.description}

    each claim, originalName in claimsByCategory[categoryId]
      div.row.mb-2
        div(id=`claim-${originalName}`).col-md-4.col-lg-3
          label: strong= claim.name
          |
          |
          span(title='Name of the claim field in claims object').badge.bg-info.text-dark.fw-normal= originalName
          if claim.link !== undefined
            |
            |
            a(href=claim.link, title='View field definition').text-decoration-none
              i.bi.bi-book
        div.col-md-8.col-lg-9
          p.mb-1 !{claim.description}
          if claim.format !== undefined
            div.text-muted.small
              span(class='text-decoration-underline') Format
              | : !{claim.format}
